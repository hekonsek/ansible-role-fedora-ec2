- name: Read EC2 instance information
  ec2_remote_facts:
    region: "{{ instance_region }}"
    filters:
      instance-state-name: running
      "tag:Name": "{{ instance_name }}"
  register: ec2_info

- name: 'Check if instance named {{ instance_name }} already exists'
  fail: msg="Instance named {{ instance_name }} already exists."
  when: "ec2_info.instances|length > 0"

- name: Upload pubic SSH key
  ec2_key:
    name: "{{ key_name }}"
    key_material: "{{lookup('file', lookup('env','HOME') + '/.ssh/id_rsa.pub')}}"
    region: "{{ instance_region }}"
    state: present

- name: Create default EC2 security group
  ec2_group:
    name: "{{ group }}"
    description: Default security group
    region: "{{ instance_region }}"
    rules:
      - proto: tcp
        from_port: 22
        to_port: 22
        cidr_ip: 0.0.0.0/0
    rules_egress:
          - proto: all
            from_port: 1
            to_port: 65535
            cidr_ip: 0.0.0.0/0

- name: Resolve Fedora 26 ami
  resolve_fedora_ami:
    region: "{{ instance_region }}"
    ssd: "{{ instance_ssd }}"
  register: fedora_ami

- fail: msg="Could not resolve requested ami"
  when: not fedora_ami.name

- name: Provision Fedora 26
  ec2:
    instance_type: "{{ instance_type }}"
    region: "{{ instance_region }}"
    image: "{{ fedora_ami.name }}"
    group:  "{{ group }}"
    wait: yes
    instance_tags:
      Name: "{{ instance_name }}"
    key_name: "{{ key_name }}"
    volumes:
      - device_name: /dev/xvda
        volume_type: gp2
        volume_size: "{{ volume_size }}"
        delete_on_termination: true

- name: Read EC2 instance information
  ec2_remote_facts:
    region: "{{ instance_region }}"
    filters:
      instance-state-name: running
      "tag:Name": "{{ instance_name }}"
  register: ec2_info

- name: Show created instance address
  debug: var=ec2_info.instances[0].public_dns_name

- name: Wait for OpenSSH server to start
  wait_for: port=22 host="{{ ec2_info.instances[0].public_dns_name }}" search_regex=OpenSSH delay=10

- name: Install Python
  delegate_to: "fedora@{{ ec2_info.instances[0].public_dns_name }}"
  raw: sudo yum install -y python